---
title: "TikZ fun!"
output:
  pdf_document: 
    latex_engine: xelatex
---

<!---->
<!-- # Using xelatex for font adjustment -->
<!---->
<!-- ```{r setup, include=FALSE} -->
<!-- options(tinytex.engine = "xelatex") -->
<!-- font_opts <- list(extra.preamble = c("\\usepackage{fontspec}",  -->
<!--                                      "\\setmainfont{Comic Sans MS}", -->
<!--                                      "\\usepackage{unicode-math}", -->
<!--                                      "\\usepackage{mathastext}", -->
<!--                                      "\\setmathfont{Comic Sans MS}")) -->
<!-- ``` -->
<!---->
<!-- ```{tikz rectangle-text, echo=FALSE, fig.align="center", engine.opts=font_opts} -->
<!-- \begin{tikzpicture} -->
<!-- \draw (0,0) rectangle (6, 2) node[midway, align=center] {I am a rectangle with math: \\ $\hat{y} = \beta_0 + \beta_1 x_1 + \text{Some text} + \varepsilon$}; -->
<!-- \end{tikzpicture} -->
<!-- ``` -->

other text 


```{r include=FALSE}
# Necessary for using dvisvgm on macOS
# See https://www.andrewheiss.com/blog/2021/08/27/tikz-knitr-html-svg-fun/
Sys.setenv(LIBGS = "/usr/local/share/ghostscript/10.03.0/lib/libgs.dylib.10.03")
font_opts <- list(dvisvgm.opts = "--font-format=woff")
```

```{tikz complete-pooling, engine.opts=font_opts}
#| echo: false
#| fig-cap: "Complete pooling"
#| fig-align: center
#| fig-ext: svg
#| out-width: 100%
\usetikzlibrary{positioning}
\usetikzlibrary{shapes.geometric}
\begin{tikzpicture}[{every node/.append style}=draw]
  \node [rectangle] (pop) at (0, 4) {Population};
  \node [ellipse] (y1) at (-5, 2.5) {$y_1$};
  \node [ellipse] (y2) at (-3, 2.5) {$y_2$};
  \node [ellipse] (y3) at (-1, 2.5) {$y_3$};
  \node [ellipse] (y4) at (1, 2.5) {$y_4$};
  \node [ellipse, draw=white] (ydots) at (3, 2.5) {$\dots$};
  \node [ellipse] (yn) at (5, 2.5) {$y_n$};
  \draw [-latex] (pop) to (y1);
  \draw [-latex] (pop) to (y2);
  \draw [-latex] (pop) to (y3);
  \draw [-latex] (pop) to (y4);
  \draw [-latex, dashed] (pop) to (ydots);
  \draw [-latex] (pop) to (yn);
\end{tikzpicture}
```
# Using svg with customized font


<!-- Stuff here -->
<!-- ```{r point-to-ghostscript, include=FALSE} -->
<!-- Sys.setenv(LIBGS = "/usr/local/share/ghostscript/10.03.0/lib/libgs.dylib.10.03") -->
<!-- ``` -->
<!-- test -->
<!---->
<!-- ```{r setup, include=FALSE} -->
<!-- # Conditional tikz output types; use PDF if this is LaTeX, otherwise use SVG with embedded fonts -->
<!-- if (knitr::is_latex_output()) { -->
<!--   knitr::opts_template$set( -->
<!--     tikz_settings = list(fig.ext = "pdf", fig.align = "center") -->
<!--   ) -->
<!-- } else { -->
<!--   knitr::opts_template$set( -->
<!--     tikz_settings = list(fig.ext = "svg", fig.align = "center", -->
<!--                          engine.opts = list(dvisvgm.opts = "--font-format=woff")) -->
<!--   ) -->
<!-- } -->
<!-- ``` -->

<!-- Here's a DAG with text: -->
<!---->
<!-- ```{r setup, include=FALSE} -->
<!-- font_opts <- list(extra.preamble = c("\\usepackage{gfsartemisia-euler}"), -->
<!--                   dvisvgm.opts = "--font-format=woff") -->
<!-- ``` -->
<!---->
<!-- ```{tikz rectangle-text, fig.ext="svg", echo=FALSE, fig.align="center", engine.opts=font_opts} -->
<!-- \begin{tikzpicture} -->
<!-- \draw (0,0) rectangle (6, 2) node[midway, align=center] {I am a rectangle with math: \\ $\hat{y} = \beta_0 + \beta_1 x_1 + \text{Some text} + \varepsilon$}; -->
<!-- \end{tikzpicture} -->
<!-- ``` -->
